2023년 8월 18일 금요일 할 일
★서브라 텍스트★			(완료)
★notepad++★			(완료)
★노션★					(완료)
★git에 대한 것★			()
fork, 소스트리 << 툴
---------------------------------------
다 하고 피드백★

패치, 풀, 푸쉬, 머지, 체크아웃, 깃 플로우 << git 용어 정리
깃 용어 정리.
브랜치(branch)
 - main 브랜치 : 깃 리포지토리를 하나 만들고 나면 main이라는 브랜치가 하나 생성이 된다. main 브랜치는 기존 기능의 유지/보수만 하면서 새로운 기능을 추가하려 하면 새로운 브랜치를 하나 만드는 것이 시작.
 - 브랜치 헤드 : 코드를 수정하고 커밋을 하게 되면 현재 사용중인 브랜치의 제일 앞에 들어가는데, 이 브랜치의 제일 앞쪽 끝을 브랜치 헤드라고 부른다. 브랜치 헤드가 이동하는 방향을 포워드(forward)라고 한다.
 - 현재 내가 작업하고 있는 워킹트리는 단 하나의 브랜치에 속해있고, 현재 사용중인 브랜치라는 의미로 커런트 브랜치라고도 한다. 가장 최근 체크아웃을 한 브랜치라서 체크아웃(checkout) 브랜치라고도 한다.

체크아웃(checkout)
 -현재 작업중인 워킹 트리의 일부 혹은 전체를 업데이트 하는 것을 말한다. 업데이트할 데이터는 깃 로컬 데이터베이스로부터 트리(폴더)나 블롭(파일)을 불러오게 되는데, 현재 사용중인 브랜치에서 파일이나 폴더의 일부를 혹은 전체 내용을 데이터베이스에 있는 내용으로 업데이트 할 수 있다.

1. git fetch란?
 - 페치(fetch)는 원격 저장소의 커밋들을 로컬 저장소로 가져온다. 그리고 자동으로 
 병합(Merge)를 해주지 않기 때문에 본인이 직접 확인을 한 후에 병합(Merge)하는 과정을 거쳐야한다.
 - 로컬 저장소와 원격 저장소의 변경 사항이 다를 때 이를 비교 대조하고 git merge 명령어와 함께 최신 데이터를 반영하거나 충돌 문제 등을 해결한다. 

2. git pull이란?
 - git pull이란 원격 저장소의 정보를 가져오면서 자동으로 로컬 브랜치에 병합(Merge)까지 수행해주는 명령어이다.
 - git remote 명령을 통해 서로 연결된 원격 저장소의 최신 내용을 로컬 저장소로 가져오면서 병합한다.
 - 하지만 pull을 이용해서 원격 저장소의 커밋을 가져오게 되면 자동으로 병합되기 때문에 어떤 내용이 병합되면서 바뀌는지 알기가 힘들다는 단점이 있다.
 